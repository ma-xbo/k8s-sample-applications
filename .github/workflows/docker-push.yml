name: Create and publish a Docker image to GitHub Packages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-push-image"
  build-and-push-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
      

      # Build Docker Images
      - name: Build Docker Image for basic-python-webserver
        env:
          APP_NAME: basic-python-webserver
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$APP_NAME
          VERSION=latest
          docker build ./$APP_NAME --tag $IMAGE_ID:$VERSION
          
      - name: Build Docker Image for basic-react-app
        env:
          APP_NAME: basic-react-app
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$APP_NAME
          VERSION=latest
          docker build ./$APP_NAME --tag $IMAGE_ID:$VERSION
      

      # Log into GitHub Container Registry 
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin


      # Push Images to GitHub Container Registry (ghcr)
      - name: Push image
        env:
          APP_NAME: basic-python-webserver
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$APP_NAME
          VERSION=latest
          docker push $IMAGE_ID:$VERSION
          
      - name: Push image
        env:
          APP_NAME: basic-python-webserver
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$APP_NAME 
          VERSION=latest
          docker push $IMAGE_ID:$VERSION
